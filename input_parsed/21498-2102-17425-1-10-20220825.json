{"titulo": "Efficient Randomness Extraction in Quantum Random Number Generators", "informacoes_url": null, "idioma": "en", "storage_key": null, "autores": ["Maur cio J. Ferreira [1], Nuno A. Silva [1], Nelson J. Muga [1] 1 Instituto de Telecomunicac  oes, University of Aveiro, Campus Universit ario de Santiago, 3810-193 Aveiro, Portugal"], "data_publicacao": null, "resumo": "Randomness extraction algorithms play an essential role in Quan- tum Random Number Generators (QRNGs), where they are used to suppress unwanted classical noise and distill true randomness from their biased output. By employing the SHA-512 hash function and Toeplitz matrix multiplication, we analyse two suitable constructions based on different principles and reach postprocessing rates of 8.69 Mbps and 3.68 Mbps, respectively. Finally, we de- velop a length-compatible Toeplitz-hashing algorithm able to achieve rates of", "keywords": null, "referencias": "Bouda, J., Pivoluska, M., Plesch, M., and Wilmott, C. (2012). Weak randomness seriously limits the security of quantum key distribution. Phys. Rev. A, 86:062308. Ferreira, M. J., Silva, N. A., Pinto, A. N., and Muga, N. J. (2021a). Characterization of a quantum random number generator based on vacuum fluctuations. Applied Sciences, 11(16). Ferreira, M. J., Silva, N. A., Pinto, A. N., and Muga, N. J. (2021b). Homodyne noise characterization in quantum random number generators. In 2021 Telecoms Conference (ConfTELE), pages 16, Leiria, Portugal. Guo, Y., Cai, Q., Li, P., Jia, Z., Xu, B., Zhang, Q., Zhang, Y., Zhang, R., Gao, Z., Shore, K. A., and Wang, Y. (2021). 40 gb/s quantum random number generation based on optically sampled amplified spontaneous emission. APL Photonics, 6(6):066105. Haw, J. Y., Assad, S. M., Lance, A. M., Ng, N. H. Y., Sharma, V., Lam, P. K., and Symul, T. (2015). Maximization of extractable randomness in a quantum random-number generator. Phys. Rev. Applied, 3:054004.   Hayashi, M. and Tsurumaru, T. (2016). More efficient privacy amplification with less random seeds via dual universal hash function. IEEE Transactions on Information Theory, 62(4):22132232. Herrero-Collantes, M. and Garcia-Escartin, J. C. (2017). Quantum random number gen- erators. Rev. Mod. Phys., 89:015004. Huang, M., Chen, Z., Zhang, Y., and Guo, H. (2020). A phase fluctuation based prac- tical quantum random number generator scheme with delay-free structure. Applied Sciences, 10(7). Kelsey, J., Schneier, B., Wagner, D., and Hall, C. (1998). Cryptanalytic attacks on pseu- dorandom number generators. In Vaudenay, S., editor, Fast Software Encryption, pages 168188, Berlin, Heidelberg. Springer Berlin Heidelberg. Knuth, D. E. (1998). The Art of Computer Programming, Volume 2: Seminumerical Algorithms . Addison-Wesley, 3 edition. Koc , C  . (2015). Open Problems in Mathematics and Computational Science . Springer International Publishing. Ma, X., Xu, F., Xu, H., Tan, X., Qi, B., and Lo, H.-K. (2013). Postprocessing for quantum random-number generators: Entropy evaluation and randomness extraction. Phys. Rev. A, 87:062327. National Institute of Standards and Technology (NIST) (2015). Secure Hash Standard (SHS) (FIPS PUB 180-4). Federal Information Processing Standards Publication, 180-4(August):36. Nie, Y.-Q., Huang, L., Liu, Y., Payne, F., Zhang, J., and Pan, J.-W. (2015). The generation of 68 Gbps quantum random number by measuring laser phase fluctuations. Review of Scientific Instruments, 86(6):063105. Vadhan, S. P. (2012). Pseudorandomness. Foundations and Trends in Theoretical Com- puter Science, 7(13):1336. Wang, X., Zhang, Y., Yu, S., and Guo, H. (2018). High-speed implementation of length-compatible privacy amplification in continuous-variable quantum key distribu- tion. IEEE Photonics Journal, PP:11.", "artigo_completo": "1. Introduction\nRandom Numbers (RNs) are currently indispensable in many cryptographic applica- tions, where they are used as keys for authentication and encryption protocols [Herrero- Collantes and Garcia-Escartin 2017]. The security of these systems is thus inextricably linked with the statistical quality of the RN Generator (RNG) explored given that, if these values are predictable, the entire protocol is compromised [Kelsey et al. 1998]. So far, Pseudo RNGs (PRNGs) have been widely employed to suppress this demand as they can effortlessly achieve high throughput rates [Knuth 1998]. However, such solutions are entirely deterministic, and cannot yield true randomness since their output is inherently periodic. Therefore, they become predictable to an adversary with enough computational resources [Kelsey et al. 1998] and their use is generally unsuitable for a wide range of critical security applications such Quantum Key Distribution (QKD), where access to true randomness is a key assumption [Bouda et al. 2012]. Quantum RNGs (QRNGs) address these issues by exploring the probabilistic na- ture of quantum phenomena to obtain information-theoretically provable randomness. Several schemes were proposed, but most modern implementations explore the quan- tum properties of light. Among others, sources such as measuring amplified spontaneous emission [Guo et al. 2021], phase laser noise [Huang et al. 2020], or quadrature fluc- tuations of a vacuum state [Ferreira et al. 2021a] have been extensively explored, with generation rates up to several dozens of Gbps being reported [Nie et al. 2015]. How- ever, in practice, the quantum noise is always mixed with additional contributions such as electrical noise, which opens security loopholes as all classical noise can be known to an eavesdropper [Ferreira et al. 2021b]. As a result, QRNGs frequently rely on the applica- tion of Randomness Extractors (REs), which deterministically extract almost-uniformly distributed data from a biased source by sacrificing part of the output sequence [Vadhan 2012]. Similarly to PRNGs, they may also require an initial random seed. Here, how- ever, their output remains unpredictable as long as the input of the extractor is not entirely   deterministic. Nonetheless, this process is computationally demanding and frequently constitutes the main limiting factor to the QRNG throughput [Ferreira et al. 2021a]. In this paper, we comparatively analyse two common approaches for the imple- mentation of a RE, highlighting the advantages and limitations of each method. Specifi- cally, we focus on the implementation of the nonuniversal SHA-512 cryptographic hash function and a seeded Toeplitz-hashing extractor. Finally, to increase the extraction effi- ciency, we implement a parallelized length-compatible version of the Toeplitz multiplica- tion algorithm and demonstrate its performance on a Graphics Processing Unit (GPU).\n2. Randomness extraction\nA ( n, m, k,  ) randomness extractor is defined as a mathematical function that converts n bits from a ( n, k )-source into m bits with a distribution  -close to the uniform distribution U m over { 0, 1 } [m], which is the desired output space for a standard RNG [Vadhan 2012,Ma et al. 2013]. Conversely, two probability distributions X and Y, defined in the same domain X, are said to be  -close if their statistical difference is bound by [Vadhan 2012]: d ( X, Y ) = max xX [|][P] [X] [(] [x] [)] [ ] [P] [Y] [ (] [x] [)] [| ] [,] (1) where  is called the security parameter. Each of these random distributions is said to be a ( n, k ) source if it outputs n -bit sequences with min-entropy H min  k . Here, the parameter k defines the number of uniformly distributed bits that can be extracted from the original n -bit sequence, and thus quantifies the side-information introduced by classical noise sources. Its estimation should take into account the specificity of each QRNG [Haw et al. 2015]. Nonetheless, randomness can only be extracted if the input sequence already has some extractable entropy, and thus m  k must necessarily hold. 2.1. Non-universal hashing extractor Deterministic REs are defined as a function Ext : { 0, 1 } [n] { 0, 1 } [m], thus forgoing ad- ditional randomness sources and only requiring the biased input sequence to be distilled. Unfortunately, no general deterministic extractor exists that is valid for an arbitrary input distribution [Herrero-Collantes and Garcia-Escartin 2017]. Nonetheless, several meth- ods have been employed, such as XORing subsets of random sequences, taking the least significant bit, applying the von Neumann de-biasing algorithm, or feeding a linear feed- back shift register [Ma et al. 2013]. These methods are frequently uncritically accepted as they require few computational resources but their application may, in fact, introduce unexpected correlations [Koc  2015]. Alternatively, one-way cryptographic hash func- tions project their input to a set of fixed length m such that the input values can not be determined solely from the output sequence. Consequently, their output is as close to uni- formly distributed as possible, minimizing the probability of two different inputs resulting in the same hash value. Nevertheless, collisions still occur, and blindly applying a hash function does not suffice since the size of the input sequence n must be chosen so that it has enough entropy to assure the randomness of the extractor output. Here, the SHA-512 cryptographic hash function was chosen to implement a de- terministic RE by hashing subsets of the input data, for which well-tested and fast imple- mentations exist [National Institute of Standards and Technology (NIST) 2015]. In this   case, to guarantee a uniformly distributed output, n must be greater than 512 bit and thus should be chosen such that [Ferreira et al. 2021a]: n =  512 [H] [t] , (2) H q  where H q is the estimated entropy due to quantum fluctuations and H t the total en- tropy of the raw output. The implemented algorithm can process the raw output at ap- proximately 8.69 Mbps on an Intel i7-9700K CPU. Unfortunately, non-universal hashing still relies on computational assumptions and, ultimately, does not provide information- theoretically provable RNs [Ma et al. 2013]. Even worse, potential biases of the hashing function are inherited by the output RNs, even if the input is perfectly random [Koc  2015]. 2.2. Toeplitz-hashing extractor A ( n, m, d, k,  ) seeded extractor is defined as Ext : { 0, 1 } [n]  { 0, 1 } [d] { 0, 1 } [m] . It ac- cepts a n -bit input sequence, and a perfectly random d -bit seed to output a m -bit sequence  -close to U m . In particular, an extractor is said to be strong if concatenating the output Ext( X, U d ) with the seed U d yields a distribution  -close to U m + d, and thus maintains the randomness of the initial seed [Vadhan 2012]. Consequently, a QRNG output can be subdivided into blocks that are subsequently hashed with the same seed without com- promising the security of the implementation. These constructions are especially attrac- tive for providing some information-theoretically provable randomness extractors secure against quantum adversaries such as the Trevisan extractor. Unfortunately, this specific implementation is particularly slow [Ma et al. 2013]. An alternative method employs two-universal hashing functions, which are randomly chosen from a universal hashing family H = {h : S T }, with collision probability [Ma et al. 2013]: 1 P hH {h ( x ) = h ( y ) }  (3) |T | [,][ ][x][ ] [=] [ y][ ] [S.] One such promising implementation employs a n  m Toeplitz matrix and obtains m ran- dom bits by multiplication with the raw data vector. Since a seed of length m + n  1 is required, no net randomness can be extracted. Fortunately, a Toeplitz extractor constitutes a strong extractor [Haw et al. 2015], and hence the initial seed can be recycled in each subsequent application. If its good statistical properties are assured, the uniformity of the output is information-theoretically guaranteed by the leftover hash lemma, which states that given a two-universal hashing family H = {h : { 0, 1 } [n] { 0, 1 } [m] }, and a probabil- ity distribution X { 0, 1 } [n] with H min ( X )  k, if [Vadhan 2012]: 1 m = k  2 log 2  , (4)  then for x  X, h  H, and  > 0, Ext( x, h ) := h ( x ) is a ( k,  ) strong extractor. In other words, the statistical distance d Ext( X, U d ), U d ),  U d, U m  []   [Vadhan 2012]. In the implementation of this algorithm, the raw bits were subdivided into se- quences of 2 [12] bits ( n = 4096) and m was chosen so that [Ferreira et al. 2021a]: m =  2 [12] p [H] [q] , (5) H t   where p was arbitrarily chosen as 0 . 9 to account for any potential entropy overestimation. With this method, raw bits can be processed at approximately 3.68 Mbps for an input length of 32 Mbits, which, despite the security offered, can severely limit the output rate of a QRNG. Furthermore, the algorithmic complexity of the Toeplitz-vector multiplication is O ( n [2] ), and thus this rate quickly decreases for larger input lengths. 2.2.1. Length-compatible Toeplitz-hashing Consequently, to improve the speed of this implementation, a multiplication algorithm for Toeplitz matrices that reduces the complexity to O ( nlog ( n )) was implemented [Wang et al. 2018]. It explores a fast method for multiplication of n  n circulant matrices, C n, which can be solely characterized by their first column a n, and are diagonalized by the discrete Fourier transform matrix F n such that: C n = F n [] [1] [diag][(] [F] [n] [a] [n] [)] [F] [n] [,] (6)  where diag( ) represents the diagonal matrix. Consequently, its multiplication with a given vector x yields [Hayashi and Tsurumaru 2016]: C n x = F [] [1] {F ( a n ) F ( x n ) } = F [] [1] {v  y}, (7) where  represents the Hadamard product and F [] [1] the inverse Fourier transform. An arbitrary n  m Toeplitz matrix, T nm, can be embedded into a circulant matrix of size n + m simply by concatenating extra elements. In fact, if a n = [ a 0,   , a n 1 ] is its first column and [] b m = [ a 0,   , a  ( m 1) ] is the first row, then the Toeplitz matrix can be contained in a circulant described by [Hayashi and Tsurumaru 2016]: a n + m = [ a 0, a 1,   , a n 1, a 0, a  ( m 1),   , a  1 ] . (8) As such, it is possible to transform the Toeplitz hashing into a multiplication of a circulant matrix with a vector r containing the raw binary output by following the steps: 1. Construct a n + m from the elements of the Toeplitz matrix, as described by (8). 2. Append a vector [] 0 of size m to r and compute y = F{ [ r, [] 0] } . 3. Compute u = F [] [1] {F ( a n + m )  y} . 4. Extract the first m entries of u, which constitutes the solution for T nm r . This length-compatible algorithm was thus implemented on a GeForce RTX 3070 GPU using Matlab s GPU computing support. To avoid exhausting its memory, this mul- tiplication problem was subdivided into smaller matrices with 4 Mbits input blocks, which were serially processed. Since the computational precision required to retrieve accurate results from the Fourier transform increases with the input length, the blocks were further subdivided into parallelized smaller batches to allow the use of single-precision calcula- tions [Wang et al. 2018]. In Table 1, these results are compared with a non-parallelized implementation on an Intel i9-10900k Central Processing Unit (CPU) for different batch sizes. As can be seen, the algorithmic speed decreases for longer input sequences. How- ever, batches of 2 Mbits showed better performance and were thus chosen for the final algorithm implementation, yielding an average postprocessing rate of 143.29 Mbps. We are thus able to increase the throughput by an order of magnitude when compared with the non-parallelized extractor. Further efforts to increase this postprocessing rate should be the focus of future work, for example, by employing Field-programmable Gate Arrays.  Table 1. Algorithmic speed (in Mbps) of the length-compatible Toeplitz-hashing algorithm for different input lengths and batch sizes, when comparatively implemented in an Intel i9-10900k CPU and in a GeForce RTX 3070 GPU. CPU Im p lementation GPU Im p lementation Gain ( % ) Input length 1 Mbit Batch 2 Mbit Batch 1 Mbit Batch 2 Mbit Batch 1 Mbit Batch 2 Mbit Batch ( Mbits ) 4 68.67 74.28 125.12 143.29 82.13 92.91 8 72.33 89.19 126.48 143.18 74.87 60.53 16 58.73 83.42 111.52 137.35 89.89 64.65 32 38.28 62.59 83.01 116.21 116.85 85.67\n3. Conclusion\nIn conclusion, we have implemented and analysed two distinct randomness extraction methods. While deterministic extractors such as the SHA-512 cryptographic hash func- tion offer fewer limitations to the throughput of a QRNG, their implementation is not reliable for every input distribution and fails to assure information-theoretic security. Meanwhile, the use of seeded extractors is frequently impracticable in implementations aiming for practical viability. This observation is corroborated by the implemented al- gorithms, given that postprocessing rates of 8.69 Mbps and 3.68 Mbps were obtained, respectively, for the SHA-512 and Toeplitz-hashing algorithms. Nonetheless, these con- structs clearly benefit from high-parallelized implementations, as demonstrated by the length-compatible implementation explored, which employs circulant matrix multiplica- tions to reach postprocessing rates of 143.29 Mbps. This work was supported in part by Fundac  ao para a Ciencia e a Tecnologia (FCT) through na tional funds, by the European Regional Development Fund (FEDER), through the Competitiveness and Internationalization Operational Programme (COMPETE 2020) of the Portugal 2020 framework, under the projects QuantumPrime (PTDC/EEI-TEL/8017/2020) and UIDB/50008/2020-UIDP/ 50008/2020 (actions DigCORE and QuRunner). The authors also acknowledge support from the Programme New Talents in Quantum Technologies of the Gulbenkian Foundation (Portugal).", "artigo_tokenizado": ["1", ".", "Introduction", "\n", "Random", "Numbers", "(", "RNs", ")", "are", "currently", "indispensable", "in", "many", "cryptographic", "applica-", "tions", ",", "where", "they", "are", "used", "as", "keys", "for", "authentication", "and", "encryption", "protocols", "[", "Herrero-", "Collantes", "and", "Garcia-Escartin", "2017", "]", ".", "The", "security", "of", "these", "systems", "is", "thus", "inextricably", "linked", "with", "the", "statistical", "quality", "of", "the", "RN", "Generator", "(", "RNG", ")", "explored", "given", "that", ",", "if", "these", "values", "are", "predictable", ",", "the", "entire", "protocol", "is", "compromised", "[", "Kelsey", "et", "al", ".", "1998", "]", ".", "So", "far", ",", "Pseudo", "RNGs", "(", "PRNGs", ")", "have", "been", "widely", "employed", "to", "suppress", "this", "demand", "as", "they", "can", "effortlessly", "achieve", "high", "throughput", "rates", "[", "Knuth", "1998", "]", ".", "However", ",", "such", "solutions", "are", "entirely", "deterministic", ",", "and", "cannot", "yield", "true", "randomness", "since", "their", "output", "is", "inherently", "periodic", ".", "Therefore", ",", "they", "become", "predictable", "to", "an", "adversary", "with", "enough", "computational", "resources", "[", "Kelsey", "et", "al", ".", "1998", "]", "and", "their", "use", "is", "generally", "unsuitable", "for", "a", "wide", "range", "of", "critical", "security", "applications", "such", "Quantum", "Key", "Distribution", "(", "QKD", ")", ",", "where", "access", "to", "true", "randomness", "is", "a", "key", "assumption", "[", "Bouda", "et", "al", ".", "2012", "]", ".", "Quantum", "RNGs", "(", "QRNGs", ")", "address", "these", "issues", "by", "exploring", "the", "probabilistic", "na-", "ture", "of", "quantum", "phenomena", "to", "obtain", "information-theoretically", "provable", "randomness", ".", "Several", "schemes", "were", "proposed", ",", "but", "most", "modern", "implementations", "explore", "the", "quan-", "tum", "properties", "of", "light", ".", "Among", "others", ",", "sources", "such", "as", "measuring", "amplified", "spontaneous", "emission", "[", "Guo", "et", "al", ".", "2021", "]", ",", "phase", "laser", "noise", "[", "Huang", "et", "al", ".", "2020", "]", ",", "or", "quadrature", "fluc-", "tuations", "of", "a", "vacuum", "state", "[", "Ferreira", "et", "al", ".", "2021a", "]", "have", "been", "extensively", "explored", ",", "with", "generation", "rates", "up", "to", "several", "dozens", "of", "Gbps", "being", "reported", "[", "Nie", "et", "al", ".", "2015", "]", ".", "How-", "ever", ",", "in", "practice", ",", "the", "quantum", "noise", "is", "always", "mixed", "with", "additional", "contributions", "such", "as", "electrical", "noise", ",", "which", "opens", "security", "loopholes", "as", "all", "classical", "noise", "can", "be", "known", "to", "an", "eavesdropper", "[", "Ferreira", "et", "al", ".", "2021b", "]", ".", "As", "a", "result", ",", "QRNGs", "frequently", "rely", "on", "the", "applica-", "tion", "of", "Randomness", "Extractors", "(", "REs", ")", ",", "which", "deterministically", "extract", "almost-uniformly", "distributed", "data", "from", "a", "biased", "source", "by", "sacrificing", "part", "of", "the", "output", "sequence", "[", "Vadhan", "2012", "]", ".", "Similarly", "to", "PRNGs", ",", "they", "may", "also", "require", "an", "initial", "random", "seed", ".", "Here", ",", "how-", "ever", ",", "their", "output", "remains", "unpredictable", "as", "long", "as", "the", "input", "of", "the", "extractor", "is", "not", "entirely", "  ", "deterministic", ".", "Nonetheless", ",", "this", "process", "is", "computationally", "demanding", "and", "frequently", "constitutes", "the", "main", "limiting", "factor", "to", "the", "QRNG", "throughput", "[", "Ferreira", "et", "al", ".", "2021a", "]", ".", "In", "this", "paper", ",", "we", "comparatively", "analyse", "two", "common", "approaches", "for", "the", "imple-", "mentation", "of", "a", "RE", ",", "highlighting", "the", "advantages", "and", "limitations", "of", "each", "method", ".", "Specifi-", "cally", ",", "we", "focus", "on", "the", "implementation", "of", "the", "nonuniversal", "SHA-512", "cryptographic", "hash", "function", "and", "a", "seeded", "Toeplitz-hashing", "extractor", ".", "Finally", ",", "to", "increase", "the", "extraction", "effi-", "ciency", ",", "we", "implement", "a", "parallelized", "length-compatible", "version", "of", "the", "Toeplitz", "multiplica-", "tion", "algorithm", "and", "demonstrate", "its", "performance", "on", "a", "Graphics", "Processing", "Unit", "(", "GPU", ")", ".", "\n", "2", ".", "Randomness", "extraction", "\n", "A", "(", "n", ",", "m", ",", "k", ",", " ", ")", "randomness", "extractor", "is", "defined", "as", "a", "mathematical", "function", "that", "converts", "n", "bits", "from", "a", "(", "n", ",", "k", ")", "-source", "into", "m", "bits", "with", "a", "distribution", " ", "-close", "to", "the", "uniform", "distribution", "U", "m", "over", "{", "0", ",", "1", "}", "[", "m", "]", ",", "which", "is", "the", "desired", "output", "space", "for", "a", "standard", "RNG", "[", "Vadhan", "2012,Ma", "et", "al", ".", "2013", "]", ".", "Conversely", ",", "two", "probability", "distributions", "X", "and", "Y", ",", "defined", "in", "the", "same", "domain", "X", ",", "are", "said", "to", "be", " ", "-close", "if", "their", "statistical", "difference", "is", "bound", "by", "[", "Vadhan", "2012", "]", ":", "d", "(", "X", ",", "Y", ")", "=", "max", "xX", "[", "|][P", "]", "[", "X", "]", "[", "(", "]", "[", "x", "]", "[", ")", "]", "[", "]", "[", "P", "]", "[", "Y", "]", "[", "(", "]", "[", "x", "]", "[", ")", "]", "[", "|", "]", "[", ",", "]", "(", "1", ")", "where", " ", "is", "called", "the", "security", "parameter", ".", "Each", "of", "these", "random", "distributions", "is", "said", "to", "be", "a", "(", "n", ",", "k", ")", "source", "if", "it", "outputs", "n", "-bit", "sequences", "with", "min-entropy", "H", "min", " ", "k", ".", "Here", ",", "the", "parameter", "k", "defines", "the", "number", "of", "uniformly", "distributed", "bits", "that", "can", "be", "extracted", "from", "the", "original", "n", "-bit", "sequence", ",", "and", "thus", "quantifies", "the", "side-information", "introduced", "by", "classical", "noise", "sources", ".", "Its", "estimation", "should", "take", "into", "account", "the", "specificity", "of", "each", "QRNG", "[", "Haw", "et", "al", ".", "2015", "]", ".", "Nonetheless", ",", "randomness", "can", "only", "be", "extracted", "if", "the", "input", "sequence", "already", "has", "some", "extractable", "entropy", ",", "and", "thus", "m", " ", "k", "must", "necessarily", "hold", ".", "2.1", ".", "Non-universal", "hashing", "extractor", "Deterministic", "REs", "are", "defined", "as", "a", "function", "Ext", ":", "{", "0", ",", "1", "}", "[", "n", "]", "{", "0", ",", "1", "}", "[", "m", "]", ",", "thus", "forgoing", "ad-", "ditional", "randomness", "sources", "and", "only", "requiring", "the", "biased", "input", "sequence", "to", "be", "distilled", ".", "Unfortunately", ",", "no", "general", "deterministic", "extractor", "exists", "that", "is", "valid", "for", "an", "arbitrary", "input", "distribution", "[", "Herrero-Collantes", "and", "Garcia-Escartin", "2017", "]", ".", "Nonetheless", ",", "several", "meth-", "ods", "have", "been", "employed", ",", "such", "as", "XORing", "subsets", "of", "random", "sequences", ",", "taking", "the", "least", "significant", "bit", ",", "applying", "the", "von", "Neumann", "de-biasing", "algorithm", ",", "or", "feeding", "a", "linear", "feed-", "back", "shift", "register", "[", "Ma", "et", "al", ".", "2013", "]", ".", "These", "methods", "are", "frequently", "uncritically", "accepted", "as", "they", "require", "few", "computational", "resources", "but", "their", "application", "may", ",", "in", "fact", ",", "introduce", "unexpected", "correlations", "[", "Koc", " ", "2015", "]", ".", "Alternatively", ",", "one-way", "cryptographic", "hash", "func-", "tions", "project", "their", "input", "to", "a", "set", "of", "fixed", "length", "m", "such", "that", "the", "input", "values", "can", "not", "be", "determined", "solely", "from", "the", "output", "sequence", ".", "Consequently", ",", "their", "output", "is", "as", "close", "to", "uni-", "formly", "distributed", "as", "possible", ",", "minimizing", "the", "probability", "of", "two", "different", "inputs", "resulting", "in", "the", "same", "hash", "value", ".", "Nevertheless", ",", "collisions", "still", "occur", ",", "and", "blindly", "applying", "a", "hash", "function", "does", "not", "suffice", "since", "the", "size", "of", "the", "input", "sequence", "n", "must", "be", "chosen", "so", "that", "it", "has", "enough", "entropy", "to", "assure", "the", "randomness", "of", "the", "extractor", "output", ".", "Here", ",", "the", "SHA-512", "cryptographic", "hash", "function", "was", "chosen", "to", "implement", "a", "de-", "terministic", "RE", "by", "hashing", "subsets", "of", "the", "input", "data", ",", "for", "which", "well-tested", "and", "fast", "imple-", "mentations", "exist", "[", "National", "Institute", "of", "Standards", "and", "Technology", "(", "NIST", ")", "2015", "]", ".", "In", "this", "  ", "case", ",", "to", "guarantee", "a", "uniformly", "distributed", "output", ",", "n", "must", "be", "greater", "than", "512", "bit", "and", "thus", "should", "be", "chosen", "such", "that", "[", "Ferreira", "et", "al", ".", "2021a", "]", ":", "n", "=", " ", "512", "[", "H", "]", "[", "t", "]", ",", "(", "2", ")", "H", "q", " ", "where", "H", "q", "is", "the", "estimated", "entropy", "due", "to", "quantum", "fluctuations", "and", "H", "t", "the", "total", "en-", "tropy", "of", "the", "raw", "output", ".", "The", "implemented", "algorithm", "can", "process", "the", "raw", "output", "at", "ap-", "proximately", "8.69", "Mbps", "on", "an", "Intel", "i7-9700", "K", "CPU", ".", "Unfortunately", ",", "non-universal", "hashing", "still", "relies", "on", "computational", "assumptions", "and", ",", "ultimately", ",", "does", "not", "provide", "information-", "theoretically", "provable", "RNs", "[", "Ma", "et", "al", ".", "2013", "]", ".", "Even", "worse", ",", "potential", "biases", "of", "the", "hashing", "function", "are", "inherited", "by", "the", "output", "RNs", ",", "even", "if", "the", "input", "is", "perfectly", "random", "[", "Koc", " ", "2015", "]", ".", "2.2", ".", "Toeplitz-hashing", "extractor", "A", "(", "n", ",", "m", ",", "d", ",", "k", ",", " ", ")", "seeded", "extractor", "is", "defined", "as", "Ext", ":", "{", "0", ",", "1", "}", "[", "n", "]", " ", "{", "0", ",", "1", "}", "[", "d", "]", "{", "0", ",", "1", "}", "[", "m", "]", ".", "It", "ac-", "cepts", "a", "n", "-bit", "input", "sequence", ",", "and", "a", "perfectly", "random", "d", "-bit", "seed", "to", "output", "a", "m", "-bit", "sequence", " ", "-close", "to", "U", "m", ".", "In", "particular", ",", "an", "extractor", "is", "said", "to", "be", "strong", "if", "concatenating", "the", "output", "Ext", "(", "X", ",", "U", "d", ")", "with", "the", "seed", "U", "d", "yields", "a", "distribution", " ", "-close", "to", "U", "m", "+", "d", ",", "and", "thus", "maintains", "the", "randomness", "of", "the", "initial", "seed", "[", "Vadhan", "2012", "]", ".", "Consequently", ",", "a", "QRNG", "output", "can", "be", "subdivided", "into", "blocks", "that", "are", "subsequently", "hashed", "with", "the", "same", "seed", "without", "com-", "promising", "the", "security", "of", "the", "implementation", ".", "These", "constructions", "are", "especially", "attrac-", "tive", "for", "providing", "some", "information-theoretically", "provable", "randomness", "extractors", "secure", "against", "quantum", "adversaries", "such", "as", "the", "Trevisan", "extractor", ".", "Unfortunately", ",", "this", "specific", "implementation", "is", "particularly", "slow", "[", "Ma", "et", "al", ".", "2013", "]", ".", "An", "alternative", "method", "employs", "two-universal", "hashing", "functions", ",", "which", "are", "randomly", "chosen", "from", "a", "universal", "hashing", "family", "H", "=", "{", "h", ":", "S", "T", "}", ",", "with", "collision", "probability", "[", "Ma", "et", "al", ".", "2013", "]", ":", "1", "P", "hH", "{", "h", "(", "x", ")", "=", "h", "(", "y", ")", "}", " ", "(", "3", ")", "|T", "|", "[", ",", "]", "[", "]", "[", "x", "]", "[", "]", "[", "=]", "[", "y", "]", "[", "]", "[", "S.", "]", "One", "such", "promising", "implementation", "employs", "a", "n", " ", "m", "Toeplitz", "matrix", "and", "obtains", "m", "ran-", "dom", "bits", "by", "multiplication", "with", "the", "raw", "data", "vector", ".", "Since", "a", "seed", "of", "length", "m", "+", "n", " ", "1", "is", "required", ",", "no", "net", "randomness", "can", "be", "extracted", ".", "Fortunately", ",", "a", "Toeplitz", "extractor", "constitutes", "a", "strong", "extractor", "[", "Haw", "et", "al", ".", "2015", "]", ",", "and", "hence", "the", "initial", "seed", "can", "be", "recycled", "in", "each", "subsequent", "application", ".", "If", "its", "good", "statistical", "properties", "are", "assured", ",", "the", "uniformity", "of", "the", "output", "is", "information-theoretically", "guaranteed", "by", "the", "leftover", "hash", "lemma", ",", "which", "states", "that", "given", "a", "two-universal", "hashing", "family", "H", "=", "{", "h", ":", "{", "0", ",", "1", "}", "[", "n", "]", "{", "0", ",", "1", "}", "[", "m", "]", "}", ",", "and", "a", "probabil-", "ity", "distribution", "X", "{", "0", ",", "1", "}", "[", "n", "]", "with", "H", "min", "(", "X", ")", " ", "k", ",", "if", "[", "Vadhan", "2012", "]", ":", "1", "m", "=", "k", " ", "2", "log", "2", " ", ",", "(", "4", ")", " ", "then", "for", "x", " ", "X", ",", "h", " ", "H", ",", "and", " ", ">", "0", ",", "Ext", "(", "x", ",", "h", ")", ":", "=", "h", "(", "x", ")", "is", "a", "(", "k", ",", " ", ")", "strong", "extractor", ".", "In", "other", "words", ",", "the", "statistical", "distance", "d", "Ext", "(", "X", ",", "U", "d", ")", ",", "U", "d", ")", ",", " ", "U", "d", ",", "U", "m", " ", "[", "]", "  ", "[", "Vadhan", "2012", "]", ".", "In", "the", "implementation", "of", "this", "algorithm", ",", "the", "raw", "bits", "were", "subdivided", "into", "se-", "quences", "of", "2", "[", "12", "]", "bits", "(", "n", "=", "4096", ")", "and", "m", "was", "chosen", "so", "that", "[", "Ferreira", "et", "al", ".", "2021a", "]", ":", "m", "=", " ", "2", "[", "12", "]", "p", "[", "H", "]", "[", "q", "]", ",", "(", "5", ")", "H", "t", "  ", "where", "p", "was", "arbitrarily", "chosen", "as", "0", ".", "9", "to", "account", "for", "any", "potential", "entropy", "overestimation", ".", "With", "this", "method", ",", "raw", "bits", "can", "be", "processed", "at", "approximately", "3.68", "Mbps", "for", "an", "input", "length", "of", "32", "Mbits", ",", "which", ",", "despite", "the", "security", "offered", ",", "can", "severely", "limit", "the", "output", "rate", "of", "a", "QRNG", ".", "Furthermore", ",", "the", "algorithmic", "complexity", "of", "the", "Toeplitz-vector", "multiplication", "is", "O", "(", "n", "[", "2", "]", ")", ",", "and", "thus", "this", "rate", "quickly", "decreases", "for", "larger", "input", "lengths", ".", "2.2.1", ".", "Length-compatible", "Toeplitz-hashing", "Consequently", ",", "to", "improve", "the", "speed", "of", "this", "implementation", ",", "a", "multiplication", "algorithm", "for", "Toeplitz", "matrices", "that", "reduces", "the", "complexity", "to", "O", "(", "nlog", "(", "n", ")", ")", "was", "implemented", "[", "Wang", "et", "al", ".", "2018", "]", ".", "It", "explores", "a", "fast", "method", "for", "multiplication", "of", "n", " ", "n", "circulant", "matrices", ",", "C", "n", ",", "which", "can", "be", "solely", "characterized", "by", "their", "first", "column", "a", "n", ",", "and", "are", "diagonalized", "by", "the", "discrete", "Fourier", "transform", "matrix", "F", "n", "such", "that", ":", "C", "n", "=", "F", "n", "[", "]", "[", "1", "]", "[", "diag", "]", "[", "(", "]", "[", "F", "]", "[", "n", "]", "[", "a", "]", "[", "n", "]", "[", ")", "]", "[", "F", "]", "[", "n", "]", "[", ",", "]", "(", "6", ")", " ", "where", "diag", "(", ")", "represents", "the", "diagonal", "matrix", ".", "Consequently", ",", "its", "multiplication", "with", "a", "given", "vector", "x", "yields", "[", "Hayashi", "and", "Tsurumaru", "2016", "]", ":", "C", "n", "x", "=", "F", "[", "]", "[", "1", "]", "{", "F", "(", "a", "n", ")", "F", "(", "x", "n", ")", "}", "=", "F", "[", "]", "[", "1", "]", "{", "v", " ", "y", "}", ",", "(", "7", ")", "where", " ", "represents", "the", "Hadamard", "product", "and", "F", "[", "]", "[", "1", "]", "the", "inverse", "Fourier", "transform", ".", "An", "arbitrary", "n", " ", "m", "Toeplitz", "matrix", ",", "T", "nm", ",", "can", "be", "embedded", "into", "a", "circulant", "matrix", "of", "size", "n", "+", "m", "simply", "by", "concatenating", "extra", "elements", ".", "In", "fact", ",", "if", "a", "n", "=", "[", "a", "0", ",", "  ", ",", "a", "n", "1", "]", "is", "its", "first", "column", "and", "[", "]", "b", "m", "=", "[", "a", "0", ",", "  ", ",", "a", " ", "(", "m", "1", ")", "]", "is", "the", "first", "row", ",", "then", "the", "Toeplitz", "matrix", "can", "be", "contained", "in", "a", "circulant", "described", "by", "[", "Hayashi", "and", "Tsurumaru", "2016", "]", ":", "a", "n", "+", "m", "=", "[", "a", "0", ",", "a", "1", ",", "  ", ",", "a", "n", "1", ",", "a", "0", ",", "a", " ", "(", "m", "1", ")", ",", "  ", ",", "a", " ", "1", "]", ".", "(", "8)", "As", "such", ",", "it", "is", "possible", "to", "transform", "the", "Toeplitz", "hashing", "into", "a", "multiplication", "of", "a", "circulant", "matrix", "with", "a", "vector", "r", "containing", "the", "raw", "binary", "output", "by", "following", "the", "steps", ":", "1", ".", "Construct", "a", "n", "+", "m", "from", "the", "elements", "of", "the", "Toeplitz", "matrix", ",", "as", "described", "by", "(", "8)", ".", "2", ".", "Append", "a", "vector", "[", "]", "0", "of", "size", "m", "to", "r", "and", "compute", "y", "=", "F", "{", "[", "r", ",", "[", "]", "0", "]", "}", ".", "3", ".", "Compute", "u", "=", "F", "[", "]", "[", "1", "]", "{", "F", "(", "a", "n", "+", "m", ")", " ", "y", "}", ".", "4", ".", "Extract", "the", "first", "m", "entries", "of", "u", ",", "which", "constitutes", "the", "solution", "for", "T", "nm", "r", ".", "This", "length-compatible", "algorithm", "was", "thus", "implemented", "on", "a", "GeForce", "RTX", "3070", "GPU", "using", "Matlab", "s", "GPU", "computing", "support", ".", "To", "avoid", "exhausting", "its", "memory", ",", "this", "mul-", "tiplication", "problem", "was", "subdivided", "into", "smaller", "matrices", "with", "4", "Mbits", "input", "blocks", ",", "which", "were", "serially", "processed", ".", "Since", "the", "computational", "precision", "required", "to", "retrieve", "accurate", "results", "from", "the", "Fourier", "transform", "increases", "with", "the", "input", "length", ",", "the", "blocks", "were", "further", "subdivided", "into", "parallelized", "smaller", "batches", "to", "allow", "the", "use", "of", "single-precision", "calcula-", "tions", "[", "Wang", "et", "al", ".", "2018", "]", ".", "In", "Table", "1", ",", "these", "results", "are", "compared", "with", "a", "non-parallelized", "implementation", "on", "an", "Intel", "i9-10900k", "Central", "Processing", "Unit", "(", "CPU", ")", "for", "different", "batch", "sizes", ".", "As", "can", "be", "seen", ",", "the", "algorithmic", "speed", "decreases", "for", "longer", "input", "sequences", ".", "How-", "ever", ",", "batches", "of", "2", "Mbits", "showed", "better", "performance", "and", "were", "thus", "chosen", "for", "the", "final", "algorithm", "implementation", ",", "yielding", "an", "average", "postprocessing", "rate", "of", "143.29", "Mbps", ".", "We", "are", "thus", "able", "to", "increase", "the", "throughput", "by", "an", "order", "of", "magnitude", "when", "compared", "with", "the", "non-parallelized", "extractor", ".", "Further", "efforts", "to", "increase", "this", "postprocessing", "rate", "should", "be", "the", "focus", "of", "future", "work", ",", "for", "example", ",", "by", "employing", "Field-programmable", "Gate", "Arrays", ".", " ", "Table", "1", ".", "Algorithmic", "speed", "(", "in", "Mbps", ")", "of", "the", "length-compatible", "Toeplitz-hashing", "algorithm", "for", "different", "input", "lengths", "and", "batch", "sizes", ",", "when", "comparatively", "implemented", "in", "an", "Intel", "i9-10900k", "CPU", "and", "in", "a", "GeForce", "RTX", "3070", "GPU", ".", "CPU", "Im", "p", "lementation", "GPU", "Im", "p", "lementation", "Gain", "(", "%", ")", "Input", "length", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "(", "Mbits", ")", "4", "68.67", "74.28", "125.12", "143.29", "82.13", "92.91", "8", "72.33", "89.19", "126.48", "143.18", "74.87", "60.53", "16", "58.73", "83.42", "111.52", "137.35", "89.89", "64.65", "32", "38.28", "62.59", "83.01", "116.21", "116.85", "85.67", "\n", "3", ".", "Conclusion", "\n", "In", "conclusion", ",", "we", "have", "implemented", "and", "analysed", "two", "distinct", "randomness", "extraction", "methods", ".", "While", "deterministic", "extractors", "such", "as", "the", "SHA-512", "cryptographic", "hash", "func-", "tion", "offer", "fewer", "limitations", "to", "the", "throughput", "of", "a", "QRNG", ",", "their", "implementation", "is", "not", "reliable", "for", "every", "input", "distribution", "and", "fails", "to", "assure", "information-theoretic", "security", ".", "Meanwhile", ",", "the", "use", "of", "seeded", "extractors", "is", "frequently", "impracticable", "in", "implementations", "aiming", "for", "practical", "viability", ".", "This", "observation", "is", "corroborated", "by", "the", "implemented", "al-", "gorithms", ",", "given", "that", "postprocessing", "rates", "of", "8.69", "Mbps", "and", "3.68", "Mbps", "were", "obtained", ",", "respectively", ",", "for", "the", "SHA-512", "and", "Toeplitz-hashing", "algorithms", ".", "Nonetheless", ",", "these", "con-", "structs", "clearly", "benefit", "from", "high-parallelized", "implementations", ",", "as", "demonstrated", "by", "the", "length-compatible", "implementation", "explored", ",", "which", "employs", "circulant", "matrix", "multiplica-", "tions", "to", "reach", "postprocessing", "rates", "of", "143.29", "Mbps", ".", "This", "work", "was", "supported", "in", "part", "by", "Fundac", " ", "ao", "para", "a", "Ciencia", "e", "a", "Tecnologia", "(", "FCT", ")", "through", "na", "tional", "funds", ",", "by", "the", "European", "Regional", "Development", "Fund", "(", "FEDER", ")", ",", "through", "the", "Competitiveness", "and", "Internationalization", "Operational", "Programme", "(", "COMPETE", "2020", ")", "of", "the", "Portugal", "2020", "framework", ",", "under", "the", "projects", "QuantumPrime", "(", "PTDC", "/", "EEI-TEL", "/8017/2020", ")", "and", "UIDB/50008/", "2020-UIDP", "/", "50008/2020", "(", "actions", "DigCORE", "and", "QuRunner", ")", ".", "The", "authors", "also", "acknowledge", "support", "from", "the", "Programme", "New", "Talents", "in", "Quantum", "Technologies", "of", "the", "Gulbenkian", "Foundation", "(", "Portugal", ")", "."], "pos_tagger": ["NUM", "PUNCT", "PROPN", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NUM", "NOUN", "PROPN", "PROPN", "ADJ", "VERB", "VERB", "PROPN", "PUNCT", "VERB", "NOUN", "NUM", "NOUN", "DET", "NOUN", "AUX", "PROPN", "PROPN", "PROPN", "VERB", "PUNCT", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "VERB", "ADJ", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "VERB", "VERB", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "VERB", "X", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "ADJ", "VERB", "PROPN", "PROPN", "ADJ", "VERB", "DET", "NOUN", "VERB", "NOUN", "VERB", "VERB", "NOUN", "ADJ", "PUNCT", "PROPN", "NUM", "PUNCT", "PUNCT", "PROPN", "PUNCT", "VERB", "NOUN", "NUM", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "VERB", "X", "ADJ", "VERB", "ADJ", "PROPN", "ADJ", "VERB", "PUNCT", "NOUN", "PUNCT", "DET", "ADJ", "PROPN", "PROPN", "VERB", "NOUN", "PROPN", "PROPN", "ADJ", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PROPN", "PROPN", "VERB", "NOUN", "VERB", "ADJ", "AUX", "ADP", "NOUN", "VERB", "PROPN", "PROPN", "ADJ", "NOUN", "VERB", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "ADV", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "NUM", "PUNCT", "PUNCT", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "NOUN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "VERB", "ADJ", "VERB", "PROPN", "PROPN", "ADJ", "PROPN", "NOUN", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "NOUN", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "NOUN", "ADJ", "PUNCT", "NOUN", "PROPN", "PUNCT", "NOUN", "VERB", "DET", "NOUN", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "NUM", "PUNCT", "PUNCT", "NOUN", "NOUN", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "DET", "PROPN", "VERB", "X", "PROPN", "SCONJ", "X", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PROPN", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "ADJ", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "PUNCT", "PROPN", "VERB", "PUNCT", "X", "NOUN", "PUNCT", "PROPN", "ADJ", "NOUN", "PROPN", "NOUN", "ADJ", "PROPN", "PROPN", "PROPN", "VERB", "DET", "NOUN", "ADJ", "PUNCT", "PRON", "NOUN", "ADJ", "NOUN", "DET", "PROPN", "ADJ", "PROPN", "VERB", "ADP", "PROPN", "PROPN", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "DET", "DET", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PUNCT", "X", "NOUN", "PROPN", "ADJ", "VERB", "NOUN", "ADJ", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "SYM", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "VERB", "NOUN", "VERB", "ADP", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "VERB", "PUNCT", "VERB", "ADJ", "ADJ", "VERB", "DET", "ADJ", "DET", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "SPACE", "ADJ", "PUNCT", "PROPN", "PUNCT", "NOUN", "ADJ", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "NOUN", "VERB", "PUNCT", "ADP", "NOUN", "PROPN", "VERB", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "DET", "NOUN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "ADJ", "DET", "ADJ", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "X", "NOUN", "PROPN", "PROPN", "X", "DET", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "SPACE", "NUM", "PUNCT", "PROPN", "NOUN", "SPACE", "DET", "PUNCT", "NOUN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PUNCT", "SPACE", "PUNCT", "VERB", "NOUN", "VERB", "VERB", "DET", "DET", "NOUN", "ADJ", "PROPN", "PROPN", "ADP", "NOUN", "ADJ", "ADP", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "DET", "VERB", "SPACE", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "VERB", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "AUX", "ADP", "NOUN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "VERB", "NUM", "PROPN", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "SPACE", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "SYM", "NUM", "PUNCT", "PUNCT", "ADP", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "VERB", "SPACE", "PROPN", "NOUN", "PROPN", "ADV", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "DET", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "VERB", "PROPN", "PROPN", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "SPACE", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "VERB", "PROPN", "NOUN", "PROPN", "VERB", "PROPN", "VERB", "VERB", "ADJ", "ADJ", "PROPN", "PRON", "VERB", "NOUN", "PROPN", "ADJ", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "ADJ", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "PROPN", "VERB", "PROPN", "PROPN", "ADJ", "NOUN", "ADP", "NOUN", "ADJ", "AUX", "ADJ", "PUNCT", "PROPN", "PROPN", "NOUN", "SPACE", "NOUN", "PROPN", "PROPN", "ADJ", "PUNCT", "NUM", "PUNCT", "ADJ", "NOUN", "NOUN", "PROPN", "PROPN", "PRON", "VERB", "DET", "DET", "NOUN", "NOUN", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "NOUN", "ADJ", "VERB", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "VERB", "PUNCT", "PROPN", "PUNCT", "ADP", "NOUN", "ADJ", "NOUN", "ADJ", "PROPN", "PROPN", "NOUN", "AUX", "SCONJ", "NOUN", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PROPN", "PUNCT", "ADJ", "NOUN", "PROPN", "PROPN", "PROPN", "NOUN", "PUNCT", "VERB", "DET", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "PROPN", "VERB", "PROPN", "PUNCT", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PUNCT", "PROPN", "PROPN", "SCONJ", "PROPN", "PROPN", "VERB", "X", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "ADJ", "PROPN", "NOUN", "ADV", "VERB", "DET", "NOUN", "ADJ", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "PROPN", "PUNCT", "PROPN", "SPACE", "NUM", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PROPN", "VERB", "ADJ", "VERB", "PROPN", "PROPN", "VERB", "ADJ", "PROPN", "DET", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "PROPN", "ADJ", "NOUN", "PROPN", "PROPN", "SCONJ", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PUNCT", "VERB", "ADJ", "PRON", "DET", "NOUN", "PROPN", "PROPN", "PROPN", "VERB", "DET", "NOUN", "PUNCT", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "X", "PROPN", "PROPN", "ADJ", "ADJ", "ADJ", "PUNCT", "PROPN", "PUNCT", "X", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "DET", "NOUN", "ADJ", "ADJ", "ADJ", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "NOUN", "PUNCT", "AUX", "PROPN", "X", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "NOUN", "SPACE", "NOUN", "PUNCT", "PROPN", "PROPN", "SCONJ", "PROPN", "NOUN", "ADJ", "PUNCT", "ADP", "PROPN", "SCONJ", "VERB", "NOUN", "NUM", "PROPN", "PROPN", "PROPN", "ADJ", "ADP", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "ADP", "PROPN", "SPACE", "NUM", "PUNCT", "NOUN", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "PROPN", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "ADJ", "NUM", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "ADJ", "NOUN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PUNCT", "ADJ", "PUNCT", "NOUN", "ADJ", "VERB", "ADJ", "NOUN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PUNCT", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "SPACE", "NUM", "PUNCT", "PUNCT", "NUM", "PUNCT", "PROPN", "PROPN", "DET", "PUNCT", "ADP", "PUNCT", "NOUN", "PUNCT", "ADP", "PUNCT", "PROPN", "PUNCT", "SPACE", "PUNCT", "VERB", "NOUN", "VERB", "VERB", "DET", "PROPN", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "ADP", "PUNCT", "SPACE", "ADP", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "ADP", "PROPN", "ADJ", "ADP", "ADP", "NOUN", "ADJ", "NOUN", "PUNCT", "PROPN", "DET", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "ADJ", "ADP", "PROPN", "PROPN", "ADJ", "SPACE", "NOUN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "ADJ", "PUNCT", "DET", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "DET", "PROPN", "SPACE", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "SYM", "NUM", "PUNCT", "PUNCT", "PROPN", "PUNCT", "ADP", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "NUM", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "SYM", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "ADJ", "ADJ", "PROPN", "AUX", "AUX", "X", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "PROPN", "ADV", "VERB", "DET", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NOUN", "DET", "NOUN", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "VERB", "PROPN", "NOUN", "ADJ", "PROPN", "PROPN", "PUNCT", "VERB", "NOUN", "ADJ", "NOUN", "ADJ", "ADP", "NOUN", "PROPN", "VERB", "NOUN", "PROPN", "ADP", "ADP", "PUNCT", "PROPN", "PROPN", "NOUN", "PUNCT", "PROPN", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "NUM", "NOUN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NOUN", "SPACE", "PUNCT", "NUM", "PUNCT", "NOUN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "AUX", "VERB", "NOUN", "PROPN", "PROPN", "ADP", "ADP", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "X", "ADJ", "PUNCT", "VERB", "DET", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "SPACE", "NUM", "NOUN", "ADJ", "PUNCT", "ADP", "NOUN", "ADJ", "PROPN", "PROPN", "VERB", "PUNCT", "PROPN", "PUNCT", "DET", "PROPN", "PROPN", "ADJ", "PRON", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "ADP", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PUNCT", "NOUN", "PROPN", "X", "ADJ", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "ADJ", "PUNCT", "DET", "ADJ", "PROPN", "ADJ", "ADP", "PROPN", "NOUN", "VERB", "NOUN", "PROPN", "ADP", "ADP", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PRON", "PROPN", "PROPN", "VERB", "ADP", "ADP", "NUM", "PUNCT", "NUM", "NOUN", "PUNCT", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "PUNCT", "SYM", "NUM", "PUNCT", "PUNCT", "NUM", "PROPN", "PROPN", "PROPN", "SPACE", "NUM", "NOUN", "NUM", "SPACE", "PUNCT", "PUNCT", "NUM", "PUNCT", "SPACE", "VERB", "AUX", "PROPN", "SPACE", "NOUN", "PUNCT", "DET", "SPACE", "NOUN", "PUNCT", "X", "SPACE", "NUM", "NUM", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "CCONJ", "PUNCT", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "DET", "PUNCT", "PROPN", "PUNCT", "SPACE", "PUNCT", "VERB", "NOUN", "PUNCT", "VERB", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE", "PUNCT", "PUNCT", "SPACE", "PUNCT", "SYM", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "X", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "NOUN", "PUNCT", "ADP", "PROPN", "NUM", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "SPACE", "NUM", "PUNCT", "NUM", "PUNCT", "PROPN", "PUNCT", "NOUN", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "NOUN", "SPACE", "VERB", "PROPN", "PROPN", "VERB", "VERB", "DET", "NUM", "PUNCT", "NUM", "PROPN", "NOUN", "AUX", "NOUN", "ADJ", "VERB", "ADJ", "PUNCT", "NUM", "NOUN", "ADJ", "PUNCT", "NOUN", "PROPN", "VERB", "NOUN", "ADJ", "NOUN", "ADJ", "NUM", "PROPN", "VERB", "SCONJ", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "ADJ", "PUNCT", "NOUN", "PROPN", "ADJ", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "DET", "PUNCT", "ADP", "PUNCT", "NUM", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PROPN", "NOUN", "ADJ", "PROPN", "ADJ", "AUX", "VERB", "ADJ", "NOUN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "DET", "NOUN", "VERB", "PROPN", "PROPN", "NOUN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "DET", "PUNCT", "NOUN", "PUNCT", "ADP", "PUNCT", "PUNCT", "PROPN", "X", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "ADP", "NOUN", "ADP", "NOUN", "ADJ", "AUX", "PROPN", "PROPN", "PROPN", "SPACE", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "ADJ", "ADP", "PROPN", "PUNCT", "X", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "DET", "NOUN", "ADV", "ADP", "ADJ", "NOUN", "PUNCT", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "PUNCT", "VERB", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "ADP", "PUNCT", "PUNCT", "DET", "PUNCT", "PUNCT", "ADP", "NOUN", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PROPN", "PUNCT", "PUNCT", "ADP", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "SPACE", "PROPN", "ADJ", "PUNCT", "PUNCT", "PROPN", "PROPN", "ADJ", "ADJ", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "DET", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "PUNCT", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "ADV", "PUNCT", "DET", "ADP", "PUNCT", "PROPN", "PUNCT", "PROPN", "ADP", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "PROPN", "SPACE", "PROPN", "NOUN", "PUNCT", "PUNCT", "NUM", "PUNCT", "VERB", "SPACE", "PROPN", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "PROPN", "VERB", "PROPN", "VERB", "PUNCT", "PROPN", "NOUN", "ADP", "SPACE", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "ADP", "PROPN", "ADJ", "SCONJ", "NOUN", "PROPN", "PROPN", "VERB", "ADP", "NOUN", "NUM", "NOUN", "PROPN", "NOUN", "ADJ", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "ADP", "ADP", "PROPN", "PUNCT", "ADP", "NUM", "PUNCT", "SPACE", "PUNCT", "DET", "ADP", "NUM", "PUNCT", "NOUN", "PROPN", "VERB", "PROPN", "PROPN", "PUNCT", "PUNCT", "INTJ", "PROPN", "PROPN", "PUNCT", "ADP", "NUM", "PUNCT", "SPACE", "PUNCT", "DET", "SPACE", "PUNCT", "NOUN", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADJ", "VERB", "ADP", "ADJ", "PROPN", "ADP", "NOUN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "PUNCT", "DET", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "ADP", "NUM", "PUNCT", "ADP", "NUM", "PUNCT", "SPACE", "PUNCT", "ADP", "ADP", "NUM", "PUNCT", "ADP", "NUM", "PUNCT", "DET", "SPACE", "PUNCT", "NOUN", "NUM", "PUNCT", "PUNCT", "SPACE", "PUNCT", "DET", "SPACE", "NUM", "PUNCT", "PUNCT", "PUNCT", "NUM", "DET", "VERB", "PUNCT", "NOUN", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "DET", "PROPN", "PROPN", "ADP", "NOUN", "PROPN", "PROPN", "ADP", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "ADJ", "ADP", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADJ", "PUNCT", "DET", "ADP", "PROPN", "PUNCT", "NUM", "PUNCT", "NUM", "PUNCT", "ADV", "ADP", "NOUN", "PUNCT", "PUNCT", "NUM", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "PUNCT", "NUM", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "ADV", "PUNCT", "DET", "ADP", "PROPN", "NOUN", "PUNCT", "SPACE", "PROPN", "NOUN", "PUNCT", "NUM", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PRON", "NOUN", "PROPN", "PROPN", "AUX", "PROPN", "ADP", "PROPN", "PUNCT", "NOUN", "ADJ", "VERB", "PROPN", "PROPN", "PROPN", "X", "DET", "PROPN", "VERB", "NUM", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "VERB", "VERB", "PUNCT", "NOUN", "VERB", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "PROPN", "NUM", "NOUN", "ADJ", "NOUN", "PUNCT", "PROPN", "VERB", "ADJ", "ADJ", "PUNCT", "PROPN", "PROPN", "ADJ", "PROPN", "ADJ", "PROPN", "VERB", "VERB", "ADJ", "NOUN", "PROPN", "PROPN", "VERB", "NOUN", "PROPN", "PROPN", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "VERB", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NUM", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "VERB", "PROPN", "ADJ", "PROPN", "DET", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "AUX", "VERB", "NOUN", "ADJ", "PUNCT", "DET", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "ADJ", "ADJ", "NOUN", "AUX", "VERB", "ADJ", "NOUN", "PUNCT", "PROPN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "AUX", "PROPN", "ADJ", "VERB", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "PUNCT", "INTJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "VERB", "SCONJ", "VERB", "PROPN", "NOUN", "VERB", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "ADJ", "NOUN", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "AUX", "PROPN", "PUNCT", "PROPN", "NOUN", "PROPN", "PROPN", "PROPN", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "NOUN", "ADJ", "PUNCT", "X", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "AUX", "ADJ", "ADJ", "NOUN", "PROPN", "PROPN", "ADJ", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "VERB", "NUM", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "SYM", "PUNCT", "PROPN", "PROPN", "NUM", "PROPN", "PROPN", "NUM", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "NUM", "SPACE", "NUM", "PUNCT", "PROPN", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "ADJ", "NOUN", "ADJ", "PUNCT", "NOUN", "NOUN", "PROPN", "VERB", "DET", "PROPN", "PROPN", "VERB", "ADJ", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADJ", "NOUN", "AUX", "VERB", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "ADJ", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "AUX", "ADJ", "VERB", "PUNCT", "NOUN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "NOUN", "PROPN", "ADJ", "VERB", "PROPN", "ADJ", "PROPN", "PROPN", "PUNCT", "DET", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "NOUN", "ADJ", "PROPN", "VERB", "PROPN", "ADP", "PROPN", "PROPN", "ADJ", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "SPACE", "PRON", "ADP", "DET", "PROPN", "CCONJ", "DET", "PROPN", "PUNCT", "PROPN", "PUNCT", "VERB", "ADP", "NOUN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "VERB", "NUM", "PUNCT", "PROPN", "PROPN", "PROPN", "NUM", "VERB", "PUNCT", "VERB", "PROPN", "VERB", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "PROPN", "PUNCT", "X", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PROPN", "VERB", "NOUN", "VERB", "NOUN", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PUNCT"], "lema": ["1", ".", "Introduction", "\n", "Random", "Numbers", "(", "RNs", ")", "are", "currently", "indispensable", "in", "many", "cryptographic", "applica-", "tiom", ",", "wherir", "they", "are", "used", "o", "keys", "ser", "authentication", "and", "encryption", "protocols", "[", "Herrero-", "Collantes", "and", "Garcia-Escartin", "2017", "_", ".", "The", "security", "of", "these", "systems", "is", "thus", "inextricably", "Linked", "with", "the", "statistical", "quality", "of", "the", "RN", "Generator", "(", "RNG", ")", "explored", "Given", "that", ",", "if", "theser", "value", "are", "Predictable", ",", "the", "entirer", "protocol", "is", "compromised", "[", "Kelsey", "et", "al", ".", "1998", "_", ".", "so", "far", ",", "Pseudo", "RNGs", "(", "PRNGs", ")", "have", "been", "widely", "employed", "to", "suppress", "thi", "demand", "o", "they", "can", "effortlessly", "achiever", "high", "throughput", "rate", "[", "Knuth", "1998", "_", ".", "However", ",", "suchr", "solutions", "are", "entirely", "deterministic", ",", "and", "cannot", "Yield", "true", "randomness", "since", "their", "output", "is", "inherently", "periodic", ".", "therefore", ",", "they", "become", "Predictable", "to", "an", "adversary", "with", "Enough", "computational", "resource", "[", "Kelsey", "et", "al", ".", "1998", "_", "and", "their", "usar", "is", "generallyr", "unsuitable", "ir", "a", "wide", "rangir", "of", "critical", "security", "applicatiom", "such", "Quantum", "Key", "Distribution", "(", "QKD", ")", ",", "Where", "access", "to", "true", "randomness", "is", "a", "Key", "Assumption", "[", "Bouda", "et", "al", ".", "2012", "_", ".", "quantum", "RNGs", "(", "QRNGs", ")", "address", "these", "issue", "by", "exploring", "the", "probabilistic", "na-", "ture", "of", "quantum", "phenomena", "to", "obtain", "information-theoretically", "Provable", "randomness", ".", "Several", "scheme", "werir", "proposed", ",", "but", "Most", "modern", "implementations", "explore", "the", "quan-", "tum", "propertie", "of", "light", ".", "Among", "others", ",", "source", "suchr", "o", "measuring", "amplified", "Spontaneous", "emission", "[", "Guo", "et", "al", ".", "2021", "_", ",", "phase", "laser", "noise", "[", "Huang", "et", "al", ".", "2020", "_", ",", "or", "quadrature", "fluc-", "tuations", "of", "a", "vacuum", "state", "[", "Ferreira", "et", "al", ".", "2021a", "_", "have", "been", "extensively", "explored", ",", "with", "Generation", "rate", "up", "to", "several", "dozem", "of", "Gbps", "being", "Reported", "[", "Nie", "et", "al", ".", "2015", "_", ".", "How-", "ever", ",", "in", "practice", ",", "the", "quantum", "noise", "is", "alway", "mixed", "with", "additional", "Contributions", "suchr", "o", "electrical", "noise", ",", "which", "opem", "security", "loophole", "o", "All", "classical", "noise", "canr", "be", "Known", "to", "an", "eavesdropper", "[", "Ferreira", "et", "al", ".", "2021b", "_", ".", "o", "o", "result", ",", "QRNGs", "frequently", "rely", "on", "the", "applica-", "tion", "of", "Randomness", "Extractors", "(", "REs", ")", ",", "which", "deterministically", "Extract", "almost-uniformly", "distributed", "data", "from", "o", "biased", "sourcer", "by", "sacrificing", "part", "of", "the", "output", "sequence", "[", "Vadhan", "2012", "_", ".", "Similarly", "to", "PRNGs", ",", "they", "may", "also", "require", "an", "initial", "random", "Seed", ".", "Here", ",", "how-", "ever", ",", "their", "output", "remaim", "unpredictable", "o", "long", "o", "The", "input", "of", "the", "extractor", "is", "Not", "entirely", "  ", "deterministic", ".", "Nonetheless", ",", "thi", "process", "is", "computationally", "demanding", "and", "frequently", "constitute", "The", "Main", "limiting", "factor", "to", "the", "QRNG", "throughput", "[", "Ferreira", "et", "al", ".", "2021a", "_", ".", "In", "thi", "paper", ",", "we", "comparatively", "analyse", "two", "common", "approache", "for", "The", "imple-", "mentation", "of", "a", "RE", ",", "highlighting", "The", "advantages", "and", "limitations", "of", "Each", "method", ".", "Specifi-", "cally", ",", "we", "Focus", "on", "The", "implementation", "of", "the", "nonuniversal", "SHA-512", "Cryptographic", "hash", "function", "and", "a", "seeded", "Toeplitz-hashing", "extractor", ".", "finally", ",", "to", "increase", "the", "extraction", "effi-", "Ciency", ",", "we", "implement", "o", "parallelized", "length-compatible", "version", "of", "the", "Toeplitz", "multiplica-", "tion", "algorithm", "and", "demonstrate", "its", "performance", "on", "o", "Graphics", "Processing", "Unit", "(", "GPU", ")", ".", "\n", "2", ".", "Randomness", "extraction", "\n", "o", "(", "n", ",", "m", ",", "k", ",", " ", ")", "randomness", "extractor", "is", "defined", "o", "o", "mathematical", "Function", "that", "Converts", "n", "bit", "from", "a", "(", "n", ",", "k", ")", "-source", "into", "m", "Bits", "With", "ela", "distribution", " ", "-close", "to", "the", "uniforr", "distribution", "U", "m", "over", "{", "0", ",", "1", "}", "[", "m", "_", ",", "which", "is", "the", "desired", "output", "Space", "ir", "a", "standard", "RNG", "[", "vadhan", "2012,Ma", "et", "al", ".", "2013", "_", ".", "Conversely", ",", "two", "probability", "distributions", "X", "and", "Y", ",", "defined", "in", "the", "same", "domainr", "X", ",", "are", "said", "to", "be", " ", "-close", "if", "their", "statistical", "difference", "is", "bound", "by", "[", "Vadhan", "2012", "_", ":", "d", "(", "X", ",", "Y", ")", "=", "max", "xX", "[", "|][P", "_", "[", "X", "_", "[", "(", "_", "[", "x", "_", "[", ")", "_", "[", "_", "[", "P", "_", "[", "Y", "_", "[", "(", "_", "[", "x", "_", "[", ")", "_", "[", "|", "_", "[", ",", "_", "(", "1", ")", "Where", " ", "is", "called", "the", "security", "parameter", ".", "Each", "of", "these", "random", "distributiom", "is", "said", "to", "be", "a", "(", "n", ",", "k", ")", "sourcer", "if", "it", "outputs", "n", "-bit", "sequence", "with", "min-entropy", "H", "min", " ", "k", ".", "Here", ",", "the", "parameter", "k", "define", "The", "number", "of", "uniformly", "distributed", "bit", "that", "can", "be", "extractedr", "from", "the", "original", "n", "-bit", "sequence", ",", "and", "thus", "quantifies", "the", "side-information", "introduced", "by", "classical", "noise", "source", ".", "Its", "estimation", "should", "take", "into", "account", "the", "specificity", "of", "each", "QRNG", "[", "Haw", "et", "al", ".", "2015", "_", ".", "Nonetheless", ",", "randomness", "can", "only", "be", "extracted", "if", "the", "input", "sequence", "already", "has", "some", "extractable", "entropy", ",", "and", "thus", "m", " ", "k", "Must", "necessarily", "hold", ".", "2.1", ".", "non-universal", "hashing", "extractor", "Deterministic", "REs", "are", "defined", "o", "o", "function", "ext", ":", "{", "0", ",", "1", "}", "[", "n", "_", "{", "0", ",", "1", "}", "[", "m", "_", ",", "thus", "forgoing", "Ad-", "ditional", "randomness", "source", "and", "only", "requiring", "The", "biased", "input", "sequence", "to", "be", "distilledr", ".", "Unfortunately", ",", "em o", "general", "deterministic", "extractor", "exists", "that", "is", "valid", "ir", "an", "arbitrary", "input", "Distribution", "[", "Herrero-Collantes", "and", "Garcia-Escartin", "2017", "_", ".", "Nonetheless", ",", "several", "meth-", "ods", "have", "been", "employed", ",", "suchr", "o", "XORing", "Subsets", "of", "random", "sequence", ",", "taking", "the", "leastr", "significant", "bit", ",", "applying", "the", "von", "neumann", "de-biasing", "algorithm", ",", "or", "feeding", "ela", "linear", "feed-", "backr", "shift", "register", "[", "Ma", "et", "al", ".", "2013", "_", ".", "These", "Methods", "are", "frequently", "uncritically", "accepted", "o", "they", "require", "few", "computational", "resource", "but", "their", "application", "may", ",", "in", "Fact", ",", "introduce", "unexpected", "correlatiom", "[", "Koc", " ", "2015", "_", ".", "Alternatively", ",", "one-way", "Cryptographic", "hash", "func-", "tiom", "Project", "their", "input", "to", "o", "set", "of", "fixed", "length", "m", "suchr", "that", "the", "input", "value", "can", "Not", "be", "determined", "solely", "from", "the", "output", "sequence", ".", "Consequently", ",", "their", "output", "is", "o", "close", "to", "uni-", "formly", "distributed", "o", "possible", ",", "minimizing", "The", "Probability", "of", "two", "Different", "inputs", "resulting", "in", "the", "same", "hash", "value", ".", "Nevertheless", ",", "collisions", "Still", "occur", ",", "and", "blindly", "applying", "o", "hash", "function", "does", "Not", "suffice", "sincer", "the", "size", "of", "the", "input", "sequence", "n", "Must", "be", "Chosen", "so", "that", "it", "has", "enough", "entropy", "to", "Assure", "the", "randomness", "of", "the", "extractor", "output", ".", "Here", ",", "the", "SHA-512", "Cryptographic", "hash", "Function", "was", "Chosen", "to", "implement", "a", "de-", "terministic", "RE", "by", "hashing", "Subsets", "of", "the", "input", "data", ",", "ser", "which", "Well-tested", "and", "fast", "imple-", "mentations", "exist", "[", "National", "Institute", "of", "Standards", "and", "Technology", "(", "NIST", ")", "2015", "_", ".", "In", "thi", "  ", "case", ",", "to", "Guarantee", "a", "uniformly", "distributed", "output", ",", "n", "Must", "be", "greater", "than", "512", "bit", "and", "thus", "should", "be", "chosen", "suchr", "that", "[", "Ferreira", "et", "al", ".", "2021a", "_", ":", "n", "=", " ", "512", "[", "H", "_", "[", "t", "_", ",", "(", "2", ")", "H", "q", " ", "where", "H", "q", "is", "the", "estimated", "entropy", "due", "to", "quantum", "fluctuatiom", "and", "H", "t", "the", "total", "en-", "tropy", "of", "the", "raw", "output", ".", "The", "implemented", "algorithm", "can", "Process", "The", "raw", "output", "at", "ap-", "proximately", "8.69", "Mbps", "on", "an", "Intel", "i7-9700", "K", "CPU", ".", "Unfortunately", ",", "non-universal", "hashing", "still", "relie", "on", "computational", "Assumptions", "and", ",", "ultimately", ",", "does", "Not", "providir", "information-", "theoretically", "Provable", "RNs", "[", "Ma", "et", "al", ".", "2013", "_", ".", "Even", "Worse", ",", "potential", "biases", "of", "the", "hashing", "function", "Are", "Inherited", "by", "the", "output", "RNs", ",", "Even", "if", "the", "input", "is", "perfectlyr", "random", "[", "Koc", " ", "2015", "_", ".", "2.2", ".", "toeplitz-hashing", "extractor", "o", "(", "n", ",", "m", ",", "d", ",", "k", ",", " ", ")", "seeded", "extractor", "is", "defined", "o", "Ext", ":", "{", "0", ",", "1", "}", "[", "n", "]", " ", "{", "0", ",", "1", "}", "[", "d", "_", "{", "0", ",", "1", "}", "[", "m", "_", ".", "it", "ac-", "cepts", "a", "n", "-bit", "input", "sequence", ",", "and", "o", "perfectly", "random", "d", "-bit", "Seed", "to", "output", "a", "m", "-bit", "sequence", " ", "-close", "to", "U", "m", ".", "in", "particular", ",", "an", "extractor", "is", "said", "to", "be", "strongr", "if", "concatenating", "the", "output", "Ext", "(", "X", ",", "U", "d", ")", "with", "the", "seed", "U", "d", "yields", "o", "distribution", " ", "-close", "to", "U", "m", "+", "d", ",", "and", "thus", "Maintains", "The", "randomness", "of", "the", "initial", "Seed", "[", "vadhan", "2012", "_", ".", "Consequently", ",", "o", "QRNG", "output", "can", "be", "subdivided", "into", "Blocks", "that", "ae re", "subsequently", "hashed", "with", "the", "same", "Seed", "without", "com-", "promising", "the", "security", "of", "The", "implementation", ".", "These", "Constructions", "ae re", "especially", "attrac-", "ter", "ser", "providing", "sumir", "information-theoretically", "Provable", "randomness", "extractors", "securar", "against", "quantum", "adversaries", "suchr", "o", "the", "Trevisan", "extractor", ".", "Unfortunately", ",", "thi", "specific", "implementation", "is", "particularly", "slow", "[", "Ma", "et", "al", ".", "2013", "_", ".", "An", "Alternative", "method", "employs", "two-universal", "hashing", "functions", ",", "Which", "are", "randomly", "chosen", "from", "a", "universal", "hashing", "family", "H", "=", "{", "h", ":", "S", "T", "}", ",", "with", "collision", "probability", "[", "Ma", "et", "al", ".", "2013", "_", ":", "1", "P", "hH", "{", "h", "(", "x", ")", "=", "h", "(", "y", ")", "}", " ", "(", "3", ")", "|T", "|", "[", ",", "_", "[", "_", "[", "x", "_", "[", "_", "[", "=]", "[", "y", "_", "[", "_", "[", "S.", "_", "one", "such", "promising", "implementation", "Employs", "a", "n", " ", "m", "Toeplitz", "matrix", "and", "obtaim", "m", "ran-", "dom", "bit", "by", "Multiplication", "with", "the", "raw", "data", "vector", ".", "Since", "o", "Seed", "of", "Length", "m", "+", "n", " ", "1", "is", "required", ",", "em o", "net", "randomness", "can", "be", "extractedr", ".", "Fortunately", ",", "o", "Toeplitz", "extractor", "constitute", "a", "strong", "extractor", "[", "Haw", "et", "al", ".", "2015", "_", ",", "and", "hence", "The", "initial", "Seed", "Can", "be", "Recycled", "in", "each", "subsequent", "application", ".", "if", "its", "good", "statistical", "propertie", "are", "assured", ",", "the", "uniformity", "of", "the", "output", "is", "information-theoretically", "guaranteed", "by", "The", "leftover", "hash", "lemma", ",", "which", "state", "that", "given", "a", "two-universal", "hashing", "family", "H", "=", "{", "h", ":", "{", "0", ",", "1", "}", "[", "n", "_", "{", "0", ",", "1", "}", "[", "m", "_", "}", ",", "and", "ela", "probabil-", "ity", "distribution", "X", "{", "0", ",", "1", "}", "[", "n", "]", "with", "H", "min", "(", "X", ")", " ", "k", ",", "if", "[", "Vadhan", "2012", "_", ":", "1", "m", "=", "k", " ", "2", "log", "2", " ", ",", "(", "4", ")", " ", "then", "ir", "x", " ", "X", ",", "h", " ", "H", ",", "and", " ", ">", "0", ",", "Ext", "(", "x", ",", "h", ")", ":", "=", "h", "(", "x", ")", "is", "o", "(", "k", ",", " ", ")", "strongr", "extractor", ".", "In", "other", "word", ",", "the", "statistical", "distance", "d", "Ext", "(", "X", ",", "U", "d", ")", ",", "U", "d", ")", ",", " ", "U", "d", ",", "U", "m", " ", "[", "_", "  ", "[", "Vadhan", "2012", "_", ".", "In", "the", "implementation", "of", "thi", "algorithm", ",", "the", "raw", "Bits", "werir", "Subdivided", "into", "Se-", "quence", "of", "2", "[", "12", "_", "bit", "(", "n", "=", "4096", ")", "and", "m", "was", "Chosen", "so", "that", "[", "Ferreira", "et", "al", ".", "2021a", "_", ":", "m", "=", " ", "2", "[", "12", "_", "p", "[", "H", "_", "[", "q", "_", ",", "(", "5", ")", "H", "t", "  ", "Where", "p", "Was", "arbitrarily", "chosen", "o", "0", ".", "9", "to", "account", "ser", "any", "potential", "entropy", "overestimation", ".", "With", "thi", "method", ",", "raw", "Bits", "can", "be", "Processed", "at", "approximately", "3.68", "Mbps", "ser", "an", "input", "length", "of", "32", "Mbits", ",", "which", ",", "despitir", "the", "security", "offered", ",", "can", "Severely", "limit", "the", "output", "rate", "of", "a", "QRNG", ".", "Furthermore", ",", "the", "algorithmic", "complexity", "of", "the", "toeplitz-vector", "multiplication", "is", "o", "(", "n", "[", "2", "_", ")", ",", "and", "thus", "thi", "rate", "quickly", "decreases", "ser", "larger", "input", "length", ".", "2.2.1", ".", "Length-compatible", "Toeplitz-hashing", "Consequently", ",", "to", "improve", "the", "speed", "of", "thi", "implementation", ",", "o", "multiplication", "algorithm", "for", "Toeplitz", "matrice", "that", "reduce", "The", "complexity", "to", "o", "(", "nlog", "(", "n", ")", ")", "Was", "implemented", "[", "Wang", "et", "al", ".", "2018", "_", ".", "it", "explor", "a", "fast", "method", "ser", "Multiplication", "of", "n", " ", "n", "circulant", "matrice", ",", "C", "n", ",", "Which", "Can", "be", "solely", "characterized", "by", "their", "first", "column", "a", "n", ",", "and", "are", "Diagonalized", "by", "The", "discreter", "Fourier", "transform", "matrix", "F", "n", "such", "that", ":", "C", "n", "=", "F", "n", "[", "_", "[", "1", "_", "[", "diag", "_", "[", "(", "_", "[", "F", "_", "[", "n", "_", "[", "o", "_", "[", "n", "_", "[", ")", "_", "[", "F", "_", "[", "n", "_", "[", ",", "_", "(", "6", ")", " ", "where", "diag", "(", ")", "represents", "the", "diagonal", "matrix", ".", "Consequently", ",", "its", "Multiplication", "with", "o", "Given", "vector", "x", "yields", "[", "Hayashi", "and", "Tsurumaru", "2016", "_", ":", "C", "n", "x", "=", "F", "[", "_", "[", "1", "_", "{", "F", "(", "o", "n", ")", "F", "(", "x", "n", ")", "}", "=", "F", "[", "_", "[", "1", "_", "{", "v", " ", "y", "}", ",", "(", "7", ")", "Where", " ", "represents", "the", "Hadamard", "product", "and", "F", "[", "_", "[", "1", "_", "The", "inverse", "Fourier", "transform", ".", "An", "arbitrary", "n", " ", "m", "Toeplitz", "matrix", ",", "T", "nm", ",", "can", "be", "Embedded", "into", "a", "circulant", "matrix", "of", "size", "n", "+", "m", "simply", "by", "concatenating", "extra", "elements", ".", "In", "Fact", ",", "if", "a", "n", "=", "[", "a", "0", ",", "  ", ",", "o", "n", "1", "_", "is", "its", "first", "column", "and", "[", "_", "b", "m", "=", "[", "a", "0", ",", "  ", ",", "o", " ", "(", "m", "1", ")", "_", "is", "The", "first", "row", ",", "then", "the", "Toeplitz", "matrix", "canr", "be", "contained", "in", "a", "circulant", "de escribed", "By", "[", "Hayashi", "and", "Tsurumaru", "2016", "_", ":", "o", "n", "+", "m", "=", "[", "a", "0", ",", "a", "1", ",", "  ", ",", "o", "n", "1", ",", "a", "0", ",", "o", " ", "(", "m", "1", ")", ",", "  ", ",", "o", " ", "1", "_", ".", "(", "8)", "o", "such", ",", "it", "is", "possible", "to", "transform", "the", "Toeplitz", "hashing", "intar", "o", "Multiplication", "of", "a", "circulant", "matrix", "With", "a", "vector", "r", "containing", "the", "raw", "binary", "output", "by", "Following", "The", "steps", ":", "1", ".", "construct", "a", "n", "+", "m", "from", "the", "Elements", "of", "the", "Toeplitz", "matrix", ",", "o", "described", "by", "(", "8)", ".", "2", ".", "append", "a", "vector", "[", "_", "0", "of", "size", "m", "to", "r", "and", "compute", "y", "=", "F", "{", "[", "r", ",", "[", "_", "0", "_", "}", ".", "3", ".", "Compute", "u", "=", "F", "[", "_", "[", "1", "_", "{", "F", "(", "o", "n", "+", "m", ")", " ", "y", "}", ".", "4", ".", "Extract", "the", "first", "m", "entries", "of", "u", ",", "Which", "constitute", "The", "solution", "ser", "T", "nm", "r", ".", "This", "length-compatible", "algorithm", "Was", "thus", "implemented", "on", "o", "GeForce", "RTX", "3070", "GPU", "using", "Matlab", "s", "GPU", "computing", "supportr", ".", "to", "avoid", "exhausting", "its", "memory", ",", "thi", "mul-", "tiplication", "probler", "Was", "Subdivided", "into", "smaller", "matrice", "with", "4", "Mbits", "input", "blocks", ",", "Which", "werir", "serially", "processed", ".", "Since", "the", "computational", "precision", "required", "to", "retrieve", "accurate", "results", "from", "the", "Fourier", "transform", "increase", "with", "The", "input", "length", ",", "the", "blocks", "Were", "further", "Subdivided", "into", "parallelizedr", "smaller", "batches", "to", "allow", "The", "use", "of", "single-precision", "calcula-", "tiom", "[", "Wang", "et", "al", ".", "2018", "_", ".", "In", "Table", "1", ",", "these", "results", "are", "compared", "With", "a", "non-parallelized", "implementation", "on", "an", "Intel", "i9-10900k", "Central", "Processing", "Unit", "(", "CPU", ")", "ser", "different", "batch", "siz", ".", "o", "can", "be", "seen", ",", "the", "algorithmic", "speed", "decreases", "ser", "longer", "input", "sequence", ".", "How-", "ever", ",", "Batches", "of", "2", "Mbits", "Showed", "better", "performance", "and", "Were", "thus", "chosen", "For", "The", "final", "algorithm", "implementation", ",", "yielding", "an", "average", "postprocessing", "rate", "of", "143.29", "Mbps", ".", "We", "are", "thus", "able", "to", "increase", "The", "throughput", "by", "an", "order", "of", "magnitude", "When", "compared", "with", "the", "non-parallelized", "extractor", ".", "Further", "effort", "to", "increase", "thi", "postprocessing", "rate", "should", "be", "The", "Focus", "of", "future", "Work", ",", "ser", "example", ",", "by", "employing", "Field-programmable", "Gate", "Arrays", ".", " ", "Table", "1", ".", "Algorithmic", "speed", "(", "in", "Mbps", ")", "of", "the", "length-compatible", "Toeplitz-hashing", "algorithm", "ser", "different", "input", "length", "and", "batch", "siz", ",", "When", "comparatively", "implemented", "in", "an", "Intel", "i9-10900k", "CPU", "and", "in", "a", "GeForce", "rTX", "3070", "GPU", ".", "CPU", "Im", "p", "lementation", "GPU", "Im", "p", "lementation", "Gain", "(", "%", ")", "input", "length", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "1", "Mbit", "Batch", "2", "Mbit", "Batch", "(", "Mbits", ")", "4", "68.67", "74.28", "125.12", "143.29", "82.13", "92.91", "8", "72.33", "89.19", "126.48", "143.18", "74.87", "60.53", "16", "58.73", "83.42", "111.52", "137.35", "89.89", "64.65", "32", "38.28", "62.59", "83.01", "116.21", "116.85", "85.67", "\n", "3", ".", "Conclusion", "\n", "In", "Conclusion", ",", "we", "have", "implemented", "and", "analysed", "two", "distinct", "randomness", "extraction", "methods", ".", "While", "deterministic", "extractors", "suchr", "o", "the", "SHA-512", "Cryptographic", "hash", "func-", "tion", "offer", "Fewer", "limitations", "to", "The", "throughput", "of", "a", "QRNG", ",", "their", "implementation", "is", "Not", "reliable", "ser", "every", "input", "Distribution", "and", "fails", "to", "assurar", "information-theoretic", "security", ".", "meanwhile", ",", "the", "use", "of", "seeded", "extractors", "is", "frequently", "Impracticable", "in", "implementations", "aiming", "ser", "practical", "viability", ".", "This", "observation", "is", "corroborated", "by", "The", "implemented", "al-", "gorithms", ",", "Given", "that", "postprocessing", "rate", "of", "8.69", "Mbps", "and", "3.68", "Mbps", "werir", "obtained", ",", "respectively", ",", "ir", "the", "SHA-512", "and", "Toeplitz-hashing", "algorithms", ".", "Nonetheless", ",", "theser", "con-", "structs", "clearly", "benefit", "from", "high-parallelized", "implementations", ",", "As", "demonstrated", "by", "The", "length-compatible", "implementation", "explored", ",", "which", "employs", "circulant", "matrix", "multiplica-", "tions", "to", "reach", "postprocessing", "rate", "of", "143.29", "Mbps", ".", "This", "work", "Was", "supported", "in", "part", "by", "Fundac", " ", "a o", "para", "o", "Ciencia", "e", "o", "Tecnologia", "(", "FCT", ")", "through", "em o", "tional", "funds", ",", "by", "the", "European", "Regional", "Development", "Fund", "(", "FEDER", ")", ",", "through", "the", "Competitiveness", "and", "Internationalization", "Operational", "Programme", "(", "COMPETE", "2020", ")", "of", "the", "Portugal", "2020", "framework", ",", "under", "the", "projectsr", "QuantumPrime", "(", "PTDC", "/", "EEI-TEL", "/8017/2020", ")", "and", "UIDB/50008/", "2020-UIDP", "/", "50008/2020", "(", "actions", "DigCORE", "and", "QuRunner", ")", ".", "The", "Authors", "Also", "acknowledger", "support", "from", "the", "Programme", "New", "Talents", "in", "Quantum", "Technologies", "of", "the", "Gulbenkian", "Foundation", "(", "Portugal", ")", "."]}